Sort a Stack
Send Feedback
Given a stack, sort the elements inside that stack in ascending order using only push and pop operation. You can use one additional stack only.
For eg.

Input Stack :  5 (top)
               4
               3
               2
               1
Output Stack : 1 (top)
               2
               3
               4
               5
Input format
First line of input consists of an integer representing the size of the stack, N
Second line of input consistes of N space-separated integers representing the elements of the stack
Output format
The only line of output consists of the elements of the stack in sorted order (space-separated)
Constraints
0 <= N <= 1000
Time limit: 1 sec
Sample Input
5
1 2 3 4 5
Sample Output
1 2 3 4 5



import java.util.Stack;
public class Solution {

    public static void sortStack(Stack<Integer> stack){
		// Write your code here	
        sort(stack);
	}
    
    public static void sort(Stack<Integer> stack){
		// Write your code here		
        if(stack.size()==0){
            return;
        }
        int topelem = stack.pop();
        sort(stack);
        insert(stack,topelem);
	}
    public static void insert(Stack<Integer> stack, int topelem){
        if(stack.isEmpty() || stack.peek() > topelem){
            stack.push(topelem);
            return;
        }
        int top = stack.pop();
        insert(stack,topelem);
        stack.push(top);
    }                        
}
