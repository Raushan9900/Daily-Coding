Return subset of an array
Send Feedback
Given an integer array (of length n), find and return all the subsets of input array.
Subsets are of length varying from 0 to n, that contain elements of the array. But the order of elements should remain same as in the input array.
Note : The order of subsets are not important.
Input format :

Line 1 : Size of array

Line 2 : Array elements (separated by space)

Sample Input:
3
15 20 12
Sample Output:
[] (this just represents an empty array, don't worry about the square brackets)
12 
20 
20 12 
15 
15 12 
15 20 
15 20 12 


public class solution {

	// Return a 2D array that contains all the subsets
	public static int[][] subsets(int input[]) {
		// Write your code here
         return subset(input,0);       
	}
    public static int[][] subset(int input[], int index){
        if(index==input.length){
            int[][] output=new int[1][0];
            return output;
        }
        int small[][]=subset(input,index+1);
        int output[][]=new int[2*small.length][];
        int k=0;
        for(int i=0;i<small.length;i++){
            output[k]=new int[small[i].length];
            for(int j=0;j<small[i].length;j++){
                output[k][j]=small[i][j];
            }
            k++;
        }
        for(int i=0;i<small.length;i++){
            output[k]=new int[small[i].length+1];
            output[k][0]=input[index];
            for(int j=1;j<=small[i].length;j++){
                output[k][j]=small[i][j-1];
            }
            k++;
        }
        return output;
                              
    }
    
}